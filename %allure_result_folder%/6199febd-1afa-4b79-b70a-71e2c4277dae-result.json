{"name": "test_buy_product_1", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00007FF7B459C6A5+28789]\n\t(No symbol) [0x00007FF7B4505B20]\n\t(No symbol) [0x00007FF7B4398F9A]\n\t(No symbol) [0x00007FF7B43EF346]\n\t(No symbol) [0x00007FF7B43EF57C]\n\t(No symbol) [0x00007FF7B4442B17]\n\t(No symbol) [0x00007FF7B441736F]\n\t(No symbol) [0x00007FF7B443F7E3]\n\t(No symbol) [0x00007FF7B4417103]\n\t(No symbol) [0x00007FF7B43DFFC0]\n\t(No symbol) [0x00007FF7B43E1273]\n\tGetHandleVerifier [0x00007FF7B48E1AED+3458237]\n\tGetHandleVerifier [0x00007FF7B48F829C+3550316]\n\tGetHandleVerifier [0x00007FF7B48EDB9D+3507565]\n\tGetHandleVerifier [0x00007FF7B4662C6A+841274]\n\t(No symbol) [0x00007FF7B45109EF]\n\t(No symbol) [0x00007FF7B450CB34]\n\t(No symbol) [0x00007FF7B450CCD6]\n\t(No symbol) [0x00007FF7B44FC119]\n\tBaseThreadInitThunk [0x00007FF8A7997374+20]\n\tRtlUserThreadStart [0x00007FF8A883CC91+33]", "trace": "set_group = None\n\n    @pytest.mark.order(3)\n    @allure.description(\"Test buy product 1\")\n    def test_buy_product_1(set_group):\n        driver = webdriver.Chrome()\n        print(\"Start Test 1\")\n        login = Login_page(driver)\n        login.autorization()\n    \n        mp = Main_page(driver)\n>       mp.select_products_1()\n\ntests\\test_buy_product.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\main_page.py:77: in select_products_1\n    self.click_select_product_1()\npages\\main_page.py:48: in click_select_product_1\n    self.get_select_product_1().click()\npages\\main_page.py:31: in get_select_product_1\n    return WebDriverWait(self.driver, 30).until(EC.element_to_be_clickable((By.XPATH, self.select_product_1)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"b1d32a2563159fd09b69568def459287\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x0000015B6D27DEE0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        ----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7B459C6A5+28789]\nE       \t(No symbol) [0x00007FF7B4505B20]\nE       \t(No symbol) [0x00007FF7B4398F9A]\nE       \t(No symbol) [0x00007FF7B43EF346]\nE       \t(No symbol) [0x00007FF7B43EF57C]\nE       \t(No symbol) [0x00007FF7B4442B17]\nE       \t(No symbol) [0x00007FF7B441736F]\nE       \t(No symbol) [0x00007FF7B443F7E3]\nE       \t(No symbol) [0x00007FF7B4417103]\nE       \t(No symbol) [0x00007FF7B43DFFC0]\nE       \t(No symbol) [0x00007FF7B43E1273]\nE       \tGetHandleVerifier [0x00007FF7B48E1AED+3458237]\nE       \tGetHandleVerifier [0x00007FF7B48F829C+3550316]\nE       \tGetHandleVerifier [0x00007FF7B48EDB9D+3507565]\nE       \tGetHandleVerifier [0x00007FF7B4662C6A+841274]\nE       \t(No symbol) [0x00007FF7B45109EF]\nE       \t(No symbol) [0x00007FF7B450CB34]\nE       \t(No symbol) [0x00007FF7B450CCD6]\nE       \t(No symbol) [0x00007FF7B44FC119]\nE       \tBaseThreadInitThunk [0x00007FF8A7997374+20]\nE       \tRtlUserThreadStart [0x00007FF8A883CC91+33]\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException"}, "description": "Test buy product 1", "steps": [{"name": "autorization", "status": "passed", "start": 1741236585718, "stop": 1741236587599}, {"name": "Select products 1", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00007FF7B459C6A5+28789]\n\t(No symbol) [0x00007FF7B4505B20]\n\t(No symbol) [0x00007FF7B4398F9A]\n\t(No symbol) [0x00007FF7B43EF346]\n\t(No symbol) [0x00007FF7B43EF57C]\n\t(No symbol) [0x00007FF7B4442B17]\n\t(No symbol) [0x00007FF7B441736F]\n\t(No symbol) [0x00007FF7B443F7E3]\n\t(No symbol) [0x00007FF7B4417103]\n\t(No symbol) [0x00007FF7B43DFFC0]\n\t(No symbol) [0x00007FF7B43E1273]\n\tGetHandleVerifier [0x00007FF7B48E1AED+3458237]\n\tGetHandleVerifier [0x00007FF7B48F829C+3550316]\n\tGetHandleVerifier [0x00007FF7B48EDB9D+3507565]\n\tGetHandleVerifier [0x00007FF7B4662C6A+841274]\n\t(No symbol) [0x00007FF7B45109EF]\n\t(No symbol) [0x00007FF7B450CB34]\n\t(No symbol) [0x00007FF7B450CCD6]\n\t(No symbol) [0x00007FF7B44FC119]\n\tBaseThreadInitThunk [0x00007FF8A7997374+20]\n\tRtlUserThreadStart [0x00007FF8A883CC91+33]\n\n", "trace": "  File \"C:\\Users\\EGelman.000\\PycharmProjects\\main\\pages\\main_page.py\", line 77, in select_products_1\n    self.click_select_product_1()\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"C:\\Users\\EGelman.000\\PycharmProjects\\main\\pages\\main_page.py\", line 48, in click_select_product_1\n    self.get_select_product_1().click()\n    ~~~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"C:\\Users\\EGelman.000\\PycharmProjects\\main\\pages\\main_page.py\", line 31, in get_select_product_1\n    return WebDriverWait(self.driver, 30).until(EC.element_to_be_clickable((By.XPATH, self.select_product_1)))\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\EGelman.000\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 146, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1741236587600, "stop": 1741236617945}], "attachments": [{"name": "stdout", "source": "49b38325-02b0-42b7-a999-acd77659e88c-attachment.txt", "type": "text/plain"}], "start": 1741236584418, "stop": 1741236617946, "uuid": "9a8dc2b5-3f24-491b-a5aa-131705524ebd", "historyId": "921e569ef0e667b7ca50b3357f391e4e", "testCaseId": "921e569ef0e667b7ca50b3357f391e4e", "fullName": "tests.test_buy_product#test_buy_product_1", "labels": [{"name": "tag", "value": "order(3)"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_buy_product"}, {"name": "host", "value": "SLB-52Z8HK3"}, {"name": "thread", "value": "8344-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_buy_product"}]}